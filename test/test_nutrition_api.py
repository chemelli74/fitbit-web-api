"""Fitbit Web API Explorer

Fitbit provides a Web API for accessing data from Fitbit activity trackers, Aria scale, and manually entered logs. Anyone can develop an application to access and modify a Fitbit user's data on their behalf, so long as it complies with Fitbit Platform Terms of Service. These Swagger UI docs do not currently support making Fitbit API requests directly. In order to make a request, construct a request for the appropriate endpoint using this documentation, and then add an Authorization header to each request with an access token obtained using the steps outlined here: https://dev.fitbit.com/build/reference/web-api/developer-guide/authorization/.

The version of the OpenAPI document: 1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from fitbit_web_api.api.nutrition_api import NutritionApi


class TestNutritionApi(unittest.IsolatedAsyncioTestCase):
    """NutritionApi unit test stubs"""

    async def asyncSetUp(self) -> None:
        self.api = NutritionApi()

    async def asyncTearDown(self) -> None:
        await self.api.api_client.close()

    async def test_add_favorite_food(self) -> None:
        """Test case for add_favorite_food

        Add Favorite Food
        """

    async def test_add_foods(self) -> None:
        """Test case for add_foods

        Create Food
        """

    async def test_add_foods_log(self) -> None:
        """Test case for add_foods_log

        Log Food
        """

    async def test_add_update_foods_goal(self) -> None:
        """Test case for add_update_foods_goal

        Update Food Goal
        """

    async def test_add_update_water_goal(self) -> None:
        """Test case for add_update_water_goal

        Update Water Goal
        """

    async def test_add_water_log(self) -> None:
        """Test case for add_water_log

        Log Water
        """

    async def test_delete_favorite_food(self) -> None:
        """Test case for delete_favorite_food

        Delete Favorite Food
        """

    async def test_delete_foods(self) -> None:
        """Test case for delete_foods

        Delete Custom Food
        """

    async def test_delete_foods_log(self) -> None:
        """Test case for delete_foods_log

        Delete Food Log
        """

    async def test_delete_meal(self) -> None:
        """Test case for delete_meal

        Delete Meal
        """

    async def test_delete_water_log(self) -> None:
        """Test case for delete_water_log

        Delete Water Log
        """

    async def test_edit_foods_log(self) -> None:
        """Test case for edit_foods_log

        Edit Food Log
        """

    async def test_get_favorite_foods(self) -> None:
        """Test case for get_favorite_foods

        Get Favorite Foods
        """

    async def test_get_foods_by_date(self) -> None:
        """Test case for get_foods_by_date

        Get Food Logs
        """

    async def test_get_foods_goal(self) -> None:
        """Test case for get_foods_goal

        Get Food Goals
        """

    async def test_get_foods_info(self) -> None:
        """Test case for get_foods_info

        Get Food
        """

    async def test_get_foods_list(self) -> None:
        """Test case for get_foods_list

        Search Foods
        """

    async def test_get_foods_locales(self) -> None:
        """Test case for get_foods_locales

        Get Food Locales
        """

    async def test_get_foods_units(self) -> None:
        """Test case for get_foods_units

        Get Food Units
        """

    async def test_get_frequent_foods(self) -> None:
        """Test case for get_frequent_foods

        Get Frequent Foods
        """

    async def test_get_recent_foods(self) -> None:
        """Test case for get_recent_foods

        Get Recent Foods
        """

    async def test_get_water_by_date(self) -> None:
        """Test case for get_water_by_date

        Get Water Logs
        """

    async def test_get_water_goal(self) -> None:
        """Test case for get_water_goal

        Get Water Goal
        """

    async def test_update_meal(self) -> None:
        """Test case for update_meal

        Update Meal
        """

    async def test_update_water_log(self) -> None:
        """Test case for update_water_log

        Update Water Log
        """


if __name__ == "__main__":
    unittest.main()
